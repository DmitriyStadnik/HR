@import "setup.scss";
@mixin shadow {
    -webkit-box-shadow: 0px 10px 20px 0px rgba(0,0,0,0.1);
    -moz-box-shadow: 0px 10px 20px 0px rgba(0,0,0,0.1);
    box-shadow: 0px 10px 20px 0px rgba(0,0,0,0.1);
}
@mixin transition ($time) {
    -webkit-transition: all $time ease-in-out;
    -moz-transition: all $time ease-in-out;
     -o-transition: all $time ease-in-out;
        transition: all $time ease-in-out;
}
@mixin px ($value) {
    padding-left: $value;
    padding-right: $value;
}
@mixin mx ($value) {
    margin-left: $value;
    margin-right: $value;
}
@mixin my ($value) {
    margin-top: $value;
    margin-bottom: $value;
}
@mixin py ($value) {
    padding-top: $value;
    padding-bottom: $value;
}
@mixin respond-to($breakpoint) { 
    @if map-has-key($breakpoints, $breakpoint) {
      @media (max-width: #{map-get($breakpoints, $breakpoint)}) {
        @content;
      }
    }
    @else {
      @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
          + "Please make sure it is defined in `$breakpoints` map.";
    }
}

@mixin respond-from($breakpoint) { 
    @if map-has-key($breakpoints, $breakpoint) {
      @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
        @content;
      }
    }
    @else {
      @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
          + "Please make sure it is defined in `$breakpoints` map.";
    }
}

.hide_on_sm {
    @include respond-to(small) {
        display: none;
    };
}

.hide_from_sm {
    @include respond-from(small) {
        display: none!important;
    }
}


.noscroll {
    height: 100% !important;
    overflow-y: hidden !important;
}